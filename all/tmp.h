
enum
{
  ECC_TOK_NO,
  ECC_TOK_ERROR,
  ECC_TOK_NULL,
  ECC_TOK_TRUE,
  ECC_TOK_FALSE,
  ECC_TOK_INTEGER,
  ECC_TOK_BINARY,
  ECC_TOK_STRING,
  ECC_TOK_ESCAPEDSTRING,
  ECC_TOK_IDENTIFIER,
  ECC_TOK_REGEXP,
  ECC_TOK_BREAK,
  ECC_TOK_CASE,
  ECC_TOK_CATCH,
  ECC_TOK_CONTINUE,
  ECC_TOK_DEBUGGER,
  ECC_TOK_DEFAULT,
  ECC_TOK_DELETE,
  ECC_TOK_DO,
  ECC_TOK_ELSE,
  ECC_TOK_FINALLY,
  ECC_TOK_FOR,
  ECC_TOK_FUNCTION,
  ECC_TOK_IF,
  ECC_TOK_IN,
  ECC_TOK_INSTANCEOF,
  ECC_TOK_NEW,
  ECC_TOK_RETURN,
  ECC_TOK_SWITCH,
  ECC_TOK_THIS,
  ECC_TOK_THROW,
  ECC_TOK_TRY,
  ECC_TOK_TYPEOF,
  ECC_TOK_VAR,
  ECC_TOK_VOID,
  ECC_TOK_WITH,
  ECC_TOK_WHILE,
  ECC_TOK_EQUAL,
  ECC_TOK_NOTEQUAL,
  ECC_TOK_IDENTICAL,
  ECC_TOK_NOTIDENTICAL,
  ECC_TOK_LEFTSHIFTASSIGN,
  ECC_TOK_RIGHTSHIFTASSIGN,
  ECC_TOK_UNSIGNEDRIGHTSHIFTASSIGN,
  ECC_TOK_LEFTSHIFT,
  ECC_TOK_RIGHTSHIFT,
  ECC_TOK_UNSIGNEDRIGHTSHIFT,
  ECC_TOK_LESSOREQUAL,
  ECC_TOK_MOREOREQUAL,
  ECC_TOK_INCREMENT,
  ECC_TOK_DECREMENT,
  ECC_TOK_LOGICALAND,
  ECC_TOK_LOGICALOR,
  ECC_TOK_ADDASSIGN,
  ECC_TOK_MINUSASSIGN,
  ECC_TOK_MULTIPLYASSIGN,
  ECC_TOK_DIVIDEASSIGN,
  ECC_TOK_MODULOASSIGN,
  ECC_TOK_ANDASSIGN,
  ECC_TOK_ORASSIGN,
  ECC_TOK_XORASSIGN,

};

static const struct {
    const char* name;
    int tok;
} items[] =
{


};

